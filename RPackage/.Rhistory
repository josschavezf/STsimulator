Heatmap(fig2b7$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("ARI: ", round(ARI(meta$region,fig2b6$BayesSpace), 2))
)
Heatmap(fig2b7$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=", round(ARI(meta$region,fig2b6$BayesSpace), 2))
)
Heatmap(fig2b7$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=", round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
p1
Heatmap(fig2b7$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
Heatmap(fig2b7$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b7$BayesSpace), 2), ")")
)
fig2b8=parameter_BayesSapce(FileName="fig2b8")
heatmap(fig2b8$heatmap, Rowv = NA, Colv =NA)
ARI(meta$region,fig2b8$BayesSpace)
fig2b5=parameter_BayesSapce(FileName="fig2b5")
heatmap(fig2b5$heatmap, Rowv = NA, Colv =NA)
Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b5$BayesSpace), 2), ")")
)
input="UseDocker/ParameterFile/fig2b6.tsv"
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
fig2b6=parameter_BayesSapce(FileName="fig2b6")
heatmap(fig2b6$heatmap, Rowv = NA, Colv =NA)
col_fun = colorRamp2(c(1,2), c("blue", "pink"))
p1=Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b5$BayesSpace), 2), ")")
)
p1
p1=Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Small Effect (ARI=",
round(ARI(meta$region,fig2b5$BayesSpace), 2), ")")
)
p1
Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
truth
p1=Heatmap(truthp,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = "True Spatial Regions")
p1=Heatmap(truth,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = "True Spatial Regions")
p1
p2=Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
p2
p1
p1=Heatmap(abs(truth-3),
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = "True Spatial Regions")
p1
p2=Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
p2
p3=Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Small Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
p3
p3=Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Small Effect (ARI=",
round(ARI(meta$region,fig2b5$BayesSpace), 2), ")")
)
p3
library(patchwork)
p1+p2+p3
FileName="fig2d1"
# load data
expr=fread(paste0("UseDocker/OutputData/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/OutputData/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/OutputData/", FileName, "_meta_1.tsv")))
# cell-cell distance
CellType1=pattern$CellType[1]
CellType2=pattern$AdjCellType[1]
dist=crossdist(meta[which(meta$annotation==CellType1), 3], meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3], meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# cutoff
dmax=max(max(meta$x.loc)-min(meta$x.loc), max(meta$y.loc)-min(meta$y.loc))
cutoff=para$spatial_int_dist_1_dist_cutoff*dmax
# load data
expr=fread(paste0("UseDocker/OutputData/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/OutputData/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/OutputData/", FileName, "_meta_1.tsv")))
para=ParaDigest(paste("UseDocker/ParameterFile/", FileName, ".tsv"))
# cell-cell distance
CellType1=pattern$CellType[1]
CellType2=pattern$AdjCellType[1]
dist=crossdist(meta[which(meta$annotation==CellType1), 3], meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3], meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# cutoff
dmax=max(max(meta$x.loc)-min(meta$x.loc), max(meta$y.loc)-min(meta$y.loc))
cutoff=para$spatial_int_dist_1_dist_cutoff*dmax
# data
dlong=dist %>% as.data.frame() %>% rownames_to_column("CellType1")  %>%
pivot_longer(-CellType1, names_to="CellType2", values_to="Dist") %>%
mutate(Group=ifelse(Dist<cutoff, 1, 0)) %>%
dplyr::select(CellType1, Group) %>%
group_by(CellType1) %>%
summarise(max=max(Group))
idx1=dlong$CellType1[which(dlong$max==1)]
idx0=dlong$CellType1[which(dlong$max==0)]
# t-test
tt=unlist(mclapply(1:nrow(expr), function(f) wilcox.test(as.numeric(expr[f, idx1]),
as.numeric(expr[f, idx0]))$p.value))
sig1=which(rownames(expr) %in% pattern$GeneID)
sig0=which(!(rownames(expr) %in% pattern$GeneID))
power=mean(tt[sig1]<0.05, na.rm=T)
type1=mean(tt[sig0]<0.05, na.rm=T)
# load data
expr=fread(paste0("UseDocker/OutputData/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/OutputData/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/OutputData/", FileName, "_meta_1.tsv")))
para=ParaDigest(paste("UseDocker/ParameterFile/", FileName, ".tsv"))
# load data
expr=fread(paste0("UseDocker/OutputData/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/OutputData/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/OutputData/", FileName, "_meta_1.tsv")))
para=ParaDigest(paste0("UseDocker/ParameterFile/", FileName, ".tsv"))
# cell-cell distance
CellType1=pattern$CellType[1]
CellType2=pattern$AdjCellType[1]
dist=crossdist(meta[which(meta$annotation==CellType1), 3], meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3], meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# cutoff
dmax=max(max(meta$x.loc)-min(meta$x.loc), max(meta$y.loc)-min(meta$y.loc))
cutoff=para$spatial_int_dist_1_dist_cutoff*dmax
# data
dlong=dist %>% as.data.frame() %>% rownames_to_column("CellType1")  %>%
pivot_longer(-CellType1, names_to="CellType2", values_to="Dist") %>%
mutate(Group=ifelse(Dist<cutoff, 1, 0)) %>%
dplyr::select(CellType1, Group) %>%
group_by(CellType1) %>%
summarise(max=max(Group))
idx1=dlong$CellType1[which(dlong$max==1)]
idx0=dlong$CellType1[which(dlong$max==0)]
# t-test
tt=unlist(mclapply(1:nrow(expr), function(f) wilcox.test(as.numeric(expr[f, idx1]),
as.numeric(expr[f, idx0]))$p.value))
sig1=which(rownames(expr) %in% pattern$GeneID)
sig0=which(!(rownames(expr) %in% pattern$GeneID))
power=mean(tt[sig1]<0.05, na.rm=T)
type1=mean(tt[sig0]<0.05, na.rm=T)
data.frame(type1, power)
fig2d1=parameter_ICG(FileName="fig2d1")
FileName="fig2d1"
parameter_ICG=function(FileName) {
# load data
expr=fread(paste0("UseDocker/OutputData/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/OutputData/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/OutputData/", FileName, "_meta_1.tsv")))
para=ParaDigest(paste0("UseDocker/ParameterFile/", FileName, ".tsv"))
# cell-cell distance
CellType1=pattern$CellType[1]
CellType2=pattern$AdjCellType[1]
dist=crossdist(meta[which(meta$annotation==CellType1), 3], meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3], meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# cutoff
dmax=max(max(meta$x.loc)-min(meta$x.loc), max(meta$y.loc)-min(meta$y.loc))
cutoff=para$spatial_int_dist_1_dist_cutoff*dmax
# data
dlong=dist %>% as.data.frame() %>% rownames_to_column("CellType1")  %>%
pivot_longer(-CellType1, names_to="CellType2", values_to="Dist") %>%
mutate(Group=ifelse(Dist<cutoff, 1, 0)) %>%
dplyr::select(CellType1, Group) %>%
group_by(CellType1) %>%
summarise(max=max(Group))
idx1=dlong$CellType1[which(dlong$max==1)]
idx0=dlong$CellType1[which(dlong$max==0)]
# t-test
tt=unlist(mclapply(1:nrow(expr), function(f) wilcox.test(as.numeric(expr[f, idx1]),
as.numeric(expr[f, idx0]))$p.value))
sig1=which(rownames(expr) %in% pattern$GeneID)
sig0=which(!(rownames(expr) %in% pattern$GeneID))
power=mean(tt[sig1]<0.05, na.rm=T)
type1=mean(tt[sig0]<0.05, na.rm=T)
return(data.frame(type1, power))
}
fig2d1=parameter_ICG(FileName="fig2d1")
fig2d2=parameter_ICG(FileName="fig2d2")
fig2d3=parameter_ICG(FileName="fig2d3")
fig2d4=parameter_ICG(FileName="fig2d4")
fig2d5=parameter_ICG(FileName="fig2d5")
input="UseDocker/ParameterFile/fig2d2.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
detach(para)
detach(para)
detach(para)
input="UseDocker/ParameterFile/fig2d2.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
setwd("/Users/songxiaoyu152/Dropbox/SpatialTranscriptomics/Paper_Simulator")
source("Github/RPackage/R/PointSimulator_NoData.R")
source("Github/RPackage/R/PointSimulator_STData.R")
source("Github/RPackage/R/ExprSimulator.R")
source("Github/RPackage/R/scDesign2_fit_revised.R")
source("Github/RPackage/R/scDesign2_simulate_revised.R")
source("Github/RPackage/R/ParameterDigest.R")
source("Github/RPackage/R/MultiCell.R")
input="UseDocker/ParameterFile/fig2d2.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
detach(para)
detach(para)
detach(para)
detach(para)
input="UseDocker/ParameterFile/fig2d2.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
fig2d2=parameter_ICG(FileName="fig2d2")
fig2d2
input="UseDocker/ParameterFile/fig2d3.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
input="UseDocker/ParameterFile/fig2d4.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
input="UseDocker/ParameterFile/fig2d5.tsv"
ModelFitFile="UseDocker/OutputData/SeqFISHPlus_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
fig2d1
fig2d3=parameter_ICG(FileName="fig2d3")
fig2d4=parameter_ICG(FileName="fig2d4")
fig2d5=parameter_ICG(FileName="fig2d5")
a=rbind(c(0.5, fig2d1),
c(0.25, fig2d2),
c(0, fig2d3),
c(-0.25, fig2d4),
c(-0.5, fig2d5)) %>%
as.data.frame() %>%
type.convert(as.is =TRUE)
save(a, file="Results/fig2d.Rdata")
a
fig2d3
save(a, file="Results/fig2d.Rdata")
getwd()
class(a)
b=a %>% pivot_longer(!V1)
p1=ggplot(b, aes(x=V1, y=value, col=name)) +
geom_point()+ geom_line()+
theme_classic() +
ylim(0,1)+
labs(x="Effect Size", y = " ")+
scale_color_discrete(name = " ", labels = c("Power", "Type I Error"))
p1
p1
b
power
class(power)
class(type1)
class(a)
class(a[1,1])
a
a[1,2]
class(fig2d1)
a=rbind(c(0.5, as.numeric(fig2d1)),
c(0.25, as.numeric(fig2d2)),
c(0, as.numeric(fig2d3)),
c(-0.25, as.numeric(fig2d4)),
c(-0.5, as.numeric(fig2d5))) %>%
as.data.frame() %>%
type.convert(as.is =TRUE)
a
save(a, file="Results/fig2d.Rdata")
b=a %>% pivot_longer(!V1)
p1=ggplot(b, aes(x=V1, y=value, col=name)) +
geom_point()+ geom_line()+
theme_classic() +
ylim(0,1)+
labs(x="Effect Size", y = " ")+
scale_color_discrete(name = " ", labels = c("Power", "Type I Error"))
p1
ggsave("Figure/fig2d.pdf", width=4, height=3)
p1=ggplot(b, aes(x=V1, y=value, col=name)) +
geom_point()+ geom_line()+
theme_classic() +
ylim(0,1)+
labs(x="Effect Size", y = " ")+
scale_color_discrete(name = " ", labels = c("Type I Error", "Power"))
ggsave("Figure/fig2d.pdf", width=4, height=3)
a
a=rbind(c(0.5, as.numeric(fig2d1)),
c(0.25, as.numeric(fig2d2)),
c(0, as.numeric(fig2d3)),
c(-0.25, as.numeric(fig2d4)),
c(-0.5, as.numeric(fig2d5))) %>%
as.data.frame() %>%
type.convert(as.is =TRUE) %>%
colnames(c("V1", "Type I Error", "Power"))
a=rbind(c(0.5, as.numeric(fig2d1)),
c(0.25, as.numeric(fig2d2)),
c(0, as.numeric(fig2d3)),
c(-0.25, as.numeric(fig2d4)),
c(-0.5, as.numeric(fig2d5))) %>%
as.data.frame() %>%
type.convert(as.is =TRUE) %>%
colnames(c("V1", "Type1", "Power"))
a=rbind(c(0.5, as.numeric(fig2d1)),
c(0.25, as.numeric(fig2d2)),
c(0, as.numeric(fig2d3)),
c(-0.25, as.numeric(fig2d4)),
c(-0.5, as.numeric(fig2d5))) %>%
as.data.frame() %>%
type.convert(as.is =TRUE) %>%
rename(c("V2"=Type1", V3="Power"))
a=rbind(c(0.5, as.numeric(fig2d1)),
c(0.25, as.numeric(fig2d2)),
c(0, as.numeric(fig2d3)),
c(-0.25, as.numeric(fig2d4)),
c(-0.5, as.numeric(fig2d5))) %>%
as.data.frame() %>%
type.convert(as.is =TRUE) %>%
rename(c(V2=Type1, V3=Power))
a=rbind(c(0.5, as.numeric(fig2d1)),
c(0.25, as.numeric(fig2d2)),
c(0, as.numeric(fig2d3)),
c(-0.25, as.numeric(fig2d4)),
c(-0.5, as.numeric(fig2d5))) %>%
as.data.frame() %>%
type.convert(as.is =TRUE) %>%
rename(c(V2="Type1", V3="Power"))
a
b=a %>% pivot_longer(!V1)
p1=ggplot(b, aes(x=V1, y=value, col=name)) +
geom_point()+ geom_line()+
theme_classic() +
ylim(0,1)+
labs(x="Effect Size", y = " ")+
scale_color_discrete(name = " ", labels = c("Type I Error", "Power"))
p1
debugSource("~/Dropbox/SpatialTranscriptomics/Paper_Simulator/codes/AnalysisCodes/Fig2D_Study_ICG.R", echo=TRUE)
p1=ggplot(b, aes(x=V1, y=value, col=name)) +
geom_point()+ geom_line()+
theme_classic() +
ylim(0,1)+
labs(x="Effect Size", y = " ")+
scale_color_discrete(name = " ", labels = c("Power", "Type I Error"))
ggsave("Figure/fig2d.pdf", width=4, height=3)
p1+p2+p3
p1=Heatmap(abs(truth-3),
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = "True Spatial Regions")
p1
p2=Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
p1
fig2b6
p2=Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
fig2b6$BayesSpace
p3=Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Small Effect (ARI=",
round(ARI(meta$region,fig2b5$BayesSpace), 2), ")")
)
dev.off()
dev.off()
p2=Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
meta$region
FileName
FileName="fig2b1"
library(aricode)
meta=fread(paste0("UseDocker/OutputData/", FileName, "_meta_1.tsv"))
ARI(meta$region,fig2b1$BayesSpace)
FileName
ARI(meta$region,fig2b6$BayesSpace), 2)
ARI(meta$region,fig2b6$BayesSpace)
p2=Heatmap(fig2b6$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Large Effect (ARI=",
round(ARI(meta$region,fig2b6$BayesSpace), 2), ")")
)
p2
p3=Heatmap(fig2b5$heatmap,
col=col_fun,
cluster_rows = FALSE,
cluster_columns = FALSE,
show_heatmap_legend=F,
column_title = paste0("Small Effect (ARI=",
round(ARI(meta$region,fig2b5$BayesSpace), 2), ")")
)
library(patchwork)
p1+p2+p3
p.all=p1+p2+p3
ggsave(p.all, file="Figure/fig2b.pdf", hight=4, width = 12)
p.all=p1+p2+p3
pdf(file="Figure/fig2b.pdf", hight=4, width = 12)
p.all=p1+p2+p3
pdf(file="Figure/fig2b.pdf", height=4, width = 12)
p.all
dev.off()
pdf(file="Figure/fig2b.pdf", height=3, width = 9)
p.all
dev.off()
