dist=crossdist(meta[which(meta$annotation==CellType1), 3],
meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3],
meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# data
dlong=dist %>% as.data.frame() %>% rownames_to_column("CellType1")  %>%
pivot_longer(-CellType1, names_to="CellType2", values_to="Dist") %>%
mutate(Group=ifelse(Dist<cutoff, 1, 0))
# %>%
# dplyr::select(CellType1, Group) %>%
# group_by(CellType1) %>%
# summarise(max=max(Group))
# group==1, gene 1 = correlation
g1=pattern[1:(nrow(pattern)/2), "GeneID"] %>%
as.matrix()%>% as.character()
g2=pattern[1:(nrow(pattern)/2), "AdjGene"] %>%
as.matrix()%>% as.character()
idx1=dlong$CellType1[which(dlong$Group==1)]
idx2=dlong$CellType2[which(dlong$Group==1)]
expr1=expr[g1, idx1]
expr2=expr[g2, idx2]
r=sapply(1:nrow(expr1), function(f)
cor(as.numeric(expr1[f,]),
as.numeric(expr2[f,])))
#}
return(r)
}
fig2a0=parameter_ICG(FileName="fig2c0_2403")
fig2a1=parameter_ICG(FileName="fig2c1_2403")
fig2a2=parameter_ICG(FileName="fig2c2_2403")
fig2a3=parameter_ICG(FileName="fig2c3_2403")
fig2a4=parameter_ICG(FileName="fig2c4_2403")
fig2a5=parameter_ICG(FileName="fig2c5_2403")
parameter_ICG_expr=function(FileName) {
para=ParaDigest(paste0("UseDocker/", FileName, ".tsv"))
# cutoff
cutoff=para$spatial_int_expr_1_dist_cutoff
res=NULL
#for (i in 1:1) {
#print(i)
i=1
# load data
expr=fread(paste0("UseDocker/output_files/", FileName, "_count_", i, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/output_files/", FileName, "_expr_pattern_",i,".tsv"))
meta=data.frame(fread(paste0("UseDocker/output_files/", FileName, "_meta_", i, ".tsv")))
# cell-cell distance
CellType1=pattern$CellType[1]
CellType2=pattern$AdjCellType[1]
dist=crossdist(meta[which(meta$annotation==CellType1), 3],
meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3],
meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# data
dlong=dist %>% as.data.frame() %>% rownames_to_column("CellType1")  %>%
pivot_longer(-CellType1, names_to="CellType2", values_to="Dist") %>%
mutate(Group=ifelse(Dist<cutoff, 1, 0))
# %>%
# dplyr::select(CellType1, Group) %>%
# group_by(CellType1) %>%
# summarise(max=max(Group))
# group==1, gene 1 = correlation
g1=pattern[1:(nrow(pattern)/2), "GeneID"] %>%
as.matrix()%>% as.character()
g2=pattern[1:(nrow(pattern)/2), "AdjGene"] %>%
as.matrix()%>% as.character()
idx1=dlong$CellType1[which(dlong$Group==1)]
idx2=dlong$CellType2[which(dlong$Group==1)]
expr1=expr[g1, idx1]
expr2=expr[g2, idx2]
r=sapply(1:nrow(expr1), function(f)
cor(as.numeric(expr1[f,]),
as.numeric(expr2[f,])))
#}
return(r)
}
fig2a0=parameter_ICG(FileName="fig2c0_2403")
fig2c0=parameter_ICG_expr(FileName="fig2c0_2403")
fig2c1=parameter_ICG_expr(FileName="fig2c1_2403")
fig2c2=parameter_ICG_expr(FileName="fig2c2_2403")
fig2c3=parameter_ICG_expr(FileName="fig2c3_2403")
fig2c4=parameter_ICG_expr(FileName="fig2c4_2403")
fig2c5=parameter_ICG_expr(FileName="fig2c5_2403")
t1=Sys.time()
FileName="Fig2c2_2403"
input=paste0("UseDocker/", FileName, ".tsv")
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
t2=Sys.time()
t2-t1
t1=Sys.time()
FileName="Fig2c3_2403"
input=paste0("UseDocker/", FileName, ".tsv")
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
t2=Sys.time()
t2-t1
t1=Sys.time()
FileName="Fig2c4_2403"
input=paste0("UseDocker/", FileName, ".tsv")
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
t2=Sys.time()
t2-t1
t1=Sys.time()
FileName="Fig2c5_2403"
input=paste0("UseDocker/", FileName, ".tsv")
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
t2=Sys.time()
t2-t1
t1=Sys.time()
FileName="Fig2c0_2403"
input=paste0("UseDocker/", FileName, ".tsv")
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
t2=Sys.time()
t2-t1
t1=Sys.time()
FileName="Fig2c1_2403"
input=paste0("UseDocker/", FileName, ".tsv")
ModelFitFile="UseDocker/OutputData/snRNAseq_FitExpr.Rdata"
ParaSimulation(input=input, ModelFitFile=ModelFitFile)
t2=Sys.time()
t2-t1
parameter_ICG_expr=function(FileName) {
para=ParaDigest(paste0("UseDocker/", FileName, ".tsv"))
# cutoff
cutoff=para$spatial_int_expr_1_dist_cutoff
res=NULL
#for (i in 1:1) {
#print(i)
i=1
# load data
expr=fread(paste0("UseDocker/output_files/", FileName, "_count_", i, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/output_files/", FileName, "_expr_pattern_",i,".tsv"))
meta=data.frame(fread(paste0("UseDocker/output_files/", FileName, "_meta_", i, ".tsv")))
# cell-cell distance
CellType1=pattern$CellType[1]
CellType2=pattern$AdjCellType[1]
dist=crossdist(meta[which(meta$annotation==CellType1), 3],
meta[which(meta$annotation==CellType1),4],
meta[which(meta$annotation==CellType2),3],
meta[which(meta$annotation==CellType2),4])
rownames(dist)=meta[which(meta$annotation==CellType1),"Cell"]
colnames(dist)=meta[which(meta$annotation==CellType2),"Cell"]
# data
dlong=dist %>% as.data.frame() %>% rownames_to_column("CellType1")  %>%
pivot_longer(-CellType1, names_to="CellType2", values_to="Dist") %>%
mutate(Group=ifelse(Dist<cutoff, 1, 0))
# %>%
# dplyr::select(CellType1, Group) %>%
# group_by(CellType1) %>%
# summarise(max=max(Group))
# group==1, gene 1 = correlation
g1=pattern[1:(nrow(pattern)/2), "GeneID"] %>%
as.matrix()%>% as.character()
g2=pattern[1:(nrow(pattern)/2), "AdjGene"] %>%
as.matrix()%>% as.character()
idx1=dlong$CellType1[which(dlong$Group==1)]
idx2=dlong$CellType2[which(dlong$Group==1)]
expr1=expr[g1, idx1]
expr2=expr[g2, idx2]
r=sapply(1:nrow(expr1), function(f)
cor(as.numeric(expr1[f,]),
as.numeric(expr2[f,])))
#}
return(r)
}
fig2c0=parameter_ICG_expr(FileName="fig2c0_2403")
fig2c1=parameter_ICG_expr(FileName="fig2c1_2403")
fig2c2=parameter_ICG_expr(FileName="fig2c2_2403")
fig2c3=parameter_ICG_expr(FileName="fig2c3_2403")
fig2c4=parameter_ICG_expr(FileName="fig2c4_2403")
fig2c5=parameter_ICG_expr(FileName="fig2c5_2403")
a=rbind(c(0, fig2c0),
c(0.1,fig2c1),
c(0.2,fig2c2),
c(0.3,fig2c3),
c(0.4,fig2c4),
c(0.5, fig2c5)) %>%
as.data.frame() %>%
type.convert(as.is =TRUE)
a[1:3,]
dim(fig2c0)
length(fig2c0)
a=rbind(cbind(0, fig2c0),
cbind(0.1,fig2c1),
cbind(0.2,fig2c2),
cbind(0.3,fig2c3),
cbind(0.4,fig2c4),
cbind(0.5, fig2c5)) %>%
as.data.frame()
a[1:3,]
fig2c0[1:5]
ggplot(a, aes(x=V1, y=fig2c0, col=V1)) +
geom_boxplot()
ggplot(a, aes(x=as.factor(V1), y=fig2c0, col=V1)) +
geom_boxplot()
a=rbind(cbind(0, fig2c0),
cbind(0.1,fig2c1),
cbind(0.2,fig2c2),
cbind(0.3,fig2c3),
cbind(0.4,fig2c4),
cbind(0.5, fig2c5)) %>%
as.data.frame()  %>%
mutate(V1=as.factor(V1))
ggplot(a, aes(x=V1, y=fig2c0, fill=V1)) +
geom_boxplot()+
theme_classic()
ggplot(a, aes(x=V1, y=fig2c0, fill=V1)) +
geom_boxplot()+
theme_classic() +
labs(x="Effect Size", y = "Correlation")
p3=ggplot(a, aes(x=V1, y=fig2c0, fill=V1)) +
geom_boxplot()+
theme_classic() +
labs(x="Effect Size", y = "Correlation")+
theme(legend.position = "none")
p3
ggsave("Figures/fig2c3_2403.pdf", width=4, height=4)
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 3), guides = "collect")
ggsave("Figures/fig2c_2403.pdf", width=12, height=4)
# map
p2=map+
geom_line(data=pair2, colour="grey", aes(x=x.loc, y=y.loc,
group=idx))+
new_scale_colour() +
geom_point(data=dat1, aes(x=x.loc, y=y.loc,
colour=Count, shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","red"), limits=c(0, 15),
values=c(0, 0.1, 1))+
new_scale_colour()+
geom_point(data=dat2, aes(x=x.loc, y=y.loc, colour=Count,  shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","blue"), limits=c(0, 7),
values=c(0, 0.1, 1))+
scale_shape_manual("Cell Type", values = c(15, 19))+
theme(plot.title=element_text(hjust = 0.5))+
labs(title="Large Effect Size (0.5)")+
guides(color = guide_legend(override.aes = list(size = 10)))
p2
p2+p1+ plot_layout(guides = "collect")& theme(legend.position = 'bottom')
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 3), guides = "collect")& theme(legend.position = 'bottom')
ggsave("Figures/fig2c_2403.pdf", width=12, height=4)
# ------------ Fig2A1: demonstrate expression-distance interaction ------------
# large effect
FileName="Fig2c1_2403"
input=paste0("UseDocker/", FileName, ".tsv")
expr=fread(paste0("UseDocker/output_files/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/output_files/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/output_files/", FileName, "_meta_1.tsv")))
pattern[1:3,]
# find gene for plotting
expr2=expr %>% filter(rownames(expr) %in% pattern$GeneID[1:(nrow(pattern)/2)])
count2=expr2%>%  apply(., 1, sum)
which(count2>2000)
expr3=expr %>% filter(rownames(expr) %in% pattern$AdjGene[1:(nrow(pattern)/2)])
count3=expr3%>%  apply(., 1, sum)
which(count2 >1000 & count3>1000)
# STRN3 SERPINF1
# 325      376
# find interaction pairs
pattern[which(pattern$GeneID=="STRN3"),]
# Type Region        CellType GeneID AdjCellType AdjGene beta
# 1: ExprAssoGenes      1 Epithelial cell  STRN3   Adipocyte  EEFSEC  0.1
dat1=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="STRN3"),]))%>%
filter(annotation=="Epithelial cell")
dat2=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="EEFSEC"),]))%>%
filter(annotation=="Adipocyte")
para=ParaDigest(input)
cutoff=para$spatial_int_expr_1_dist_cutoff
distance=crossdist(dat1$x.loc, dat1$y.loc, dat2$x.loc, dat2$y.loc)
pair=which(distance<cutoff, arr.ind=T)
pair2=data.frame(rbind(cbind(x.loc=dat1[pair[,1],"x.loc"],
y.loc=dat1[pair[,1],"y.loc"], idx=1:nrow(pair)),
cbind(x.loc=dat2[pair[,2],"x.loc"],
y.loc=dat2[pair[,2],"y.loc"], idx=1:nrow(pair))))
library(ggnewscale)
window1=data.frame(rbind(c(0,0), c(0,1), c(1,1), c(1,0), c(0,0)))
map <- ggplot() +
geom_path(aes(x = X1, y = X2), data = window1)+
coord_equal()+theme_classic() +
theme(axis.line=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
# map
p1=map+
geom_line(data=pair2, colour="grey", aes(x=x.loc, y=y.loc,
group=idx))+
new_scale_colour() +
geom_point(data=dat1, aes(x=x.loc, y=y.loc,
colour=Count, shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","red"), limits=c(0, 15),
values=c(0, 0.1, 1))+
new_scale_colour()+
geom_point(data=dat2, aes(x=x.loc, y=y.loc, colour=Count,  shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","blue"), limits=c(0, 7),
values=c(0, 0.1, 1))+
scale_shape_manual("Cell Type", values = c(15, 19))+
theme(plot.title=element_text(hjust = 0.5))+
labs(title="Small Effect Size (0.1)")+theme(legend.position = 'bottom')
p1
ggsave("Figures/fig2c1_2403.pdf", width=3, height=3)
# large effect
FileName="fig2c5_2403"
input=paste0("UseDocker/", FileName, ".tsv")
expr=fread(paste0("UseDocker/output_files/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/output_files/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/output_files/", FileName, "_meta_1.tsv")))
# find interaction pairs
pattern[which(pattern$GeneID=="STRN3"),]
# Type Region        CellType GeneID AdjCellType AdjGene beta
# 1: ExprAssoGenes      1 Epithelial cell  STRN3   Adipocyte  EEFSEC  0.1
dat1=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="STRN3"),]))%>%
filter(annotation=="Epithelial cell")
dat2=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="EEFSEC"),]))%>%
filter(annotation=="Adipocyte")
para=ParaDigest(input)
cutoff=para$spatial_int_expr_1_dist_cutoff
distance=crossdist(dat1$x.loc, dat1$y.loc, dat2$x.loc, dat2$y.loc)
pair=which(distance<cutoff, arr.ind=T)
pair2=data.frame(rbind(cbind(x.loc=dat1[pair[,1],"x.loc"],
y.loc=dat1[pair[,1],"y.loc"], idx=1:nrow(pair)),
cbind(x.loc=dat2[pair[,2],"x.loc"],
y.loc=dat2[pair[,2],"y.loc"], idx=1:nrow(pair))))
library(ggnewscale)
window1=data.frame(rbind(c(0,0), c(0,1), c(1,1), c(1,0), c(0,0)))
map <- ggplot() +
geom_path(aes(x = X1, y = X2), data = window1)+
coord_equal()+theme_classic() +
theme(axis.line=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
# map
p2=map+
geom_line(data=pair2, colour="grey", aes(x=x.loc, y=y.loc,
group=idx))+
new_scale_colour() +
geom_point(data=dat1, aes(x=x.loc, y=y.loc,
colour=Count, shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","red"), limits=c(0, 15),
values=c(0, 0.1, 1))+
new_scale_colour()+
geom_point(data=dat2, aes(x=x.loc, y=y.loc, colour=Count,  shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","blue"), limits=c(0, 7),
values=c(0, 0.1, 1))+
scale_shape_manual("Cell Type", values = c(15, 19))+
theme(plot.title=element_text(hjust = 0.5))+
labs(title="Large Effect Size (0.5)")+theme(legend.position = 'bottom')
p2
ggsave("Figures/fig2c5_2403.pdf", width=3, height=3)
library(patchwork)
p2+p1
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 3), guides = "collect")
ggsave("Figures/fig2c_2403.pdf", width=12, height=4)
# ------------ Fig2A1: demonstrate expression-distance interaction ------------
# large effect
FileName="Fig2c1_2403"
input=paste0("UseDocker/", FileName, ".tsv")
expr=fread(paste0("UseDocker/output_files/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/output_files/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/output_files/", FileName, "_meta_1.tsv")))
pattern[1:3,]
# find gene for plotting
expr2=expr %>% filter(rownames(expr) %in% pattern$GeneID[1:(nrow(pattern)/2)])
count2=expr2%>%  apply(., 1, sum)
which(count2>2000)
expr3=expr %>% filter(rownames(expr) %in% pattern$AdjGene[1:(nrow(pattern)/2)])
count3=expr3%>%  apply(., 1, sum)
which(count2 >1000 & count3>1000)
# STRN3 SERPINF1
# 325      376
# find interaction pairs
pattern[which(pattern$GeneID=="STRN3"),]
# Type Region        CellType GeneID AdjCellType AdjGene beta
# 1: ExprAssoGenes      1 Epithelial cell  STRN3   Adipocyte  EEFSEC  0.1
dat1=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="STRN3"),]))%>%
filter(annotation=="Epithelial cell")
dat2=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="EEFSEC"),]))%>%
filter(annotation=="Adipocyte")
para=ParaDigest(input)
cutoff=para$spatial_int_expr_1_dist_cutoff
distance=crossdist(dat1$x.loc, dat1$y.loc, dat2$x.loc, dat2$y.loc)
pair=which(distance<cutoff, arr.ind=T)
pair2=data.frame(rbind(cbind(x.loc=dat1[pair[,1],"x.loc"],
y.loc=dat1[pair[,1],"y.loc"], idx=1:nrow(pair)),
cbind(x.loc=dat2[pair[,2],"x.loc"],
y.loc=dat2[pair[,2],"y.loc"], idx=1:nrow(pair))))
library(ggnewscale)
window1=data.frame(rbind(c(0,0), c(0,1), c(1,1), c(1,0), c(0,0)))
map <- ggplot() +
geom_path(aes(x = X1, y = X2), data = window1)+
coord_equal()+theme_classic() +
theme(axis.line=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
# map
p1=map+
geom_line(data=pair2, colour="grey", aes(x=x.loc, y=y.loc,
group=idx))+
new_scale_colour() +
geom_point(data=dat1, aes(x=x.loc, y=y.loc,
colour=Count, shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","red"), limits=c(0, 15),
values=c(0, 0.1, 1))+
new_scale_colour()+
geom_point(data=dat2, aes(x=x.loc, y=y.loc, colour=Count,  shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","blue"), limits=c(0, 7),
values=c(0, 0.1, 1))+
scale_shape_manual("Cell Type", values = c(15, 19))+
theme(plot.title=element_text(hjust = 0.5))+
labs(title="Small Effect Size (0.1)")
p1
ggsave("Figures/fig2c1_2403.pdf", width=3, height=3)
# large effect
FileName="fig2c5_2403"
input=paste0("UseDocker/", FileName, ".tsv")
expr=fread(paste0("UseDocker/output_files/", FileName, "_count_", 1, ".tsv")) %>% as.data.frame %>%
column_to_rownames("GeneName")
pattern=fread(paste0("UseDocker/output_files/", FileName, "_expr_pattern_",1,".tsv"))
meta=data.frame(fread(paste0("UseDocker/output_files/", FileName, "_meta_1.tsv")))
# find interaction pairs
pattern[which(pattern$GeneID=="STRN3"),]
# Type Region        CellType GeneID AdjCellType AdjGene beta
# 1: ExprAssoGenes      1 Epithelial cell  STRN3   Adipocyte  EEFSEC  0.1
dat1=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="STRN3"),]))%>%
filter(annotation=="Epithelial cell")
dat2=meta %>%
mutate(Count=as.numeric(expr[which(rownames(expr)=="EEFSEC"),]))%>%
filter(annotation=="Adipocyte")
para=ParaDigest(input)
cutoff=para$spatial_int_expr_1_dist_cutoff
distance=crossdist(dat1$x.loc, dat1$y.loc, dat2$x.loc, dat2$y.loc)
pair=which(distance<cutoff, arr.ind=T)
pair2=data.frame(rbind(cbind(x.loc=dat1[pair[,1],"x.loc"],
y.loc=dat1[pair[,1],"y.loc"], idx=1:nrow(pair)),
cbind(x.loc=dat2[pair[,2],"x.loc"],
y.loc=dat2[pair[,2],"y.loc"], idx=1:nrow(pair))))
library(ggnewscale)
window1=data.frame(rbind(c(0,0), c(0,1), c(1,1), c(1,0), c(0,0)))
map <- ggplot() +
geom_path(aes(x = X1, y = X2), data = window1)+
coord_equal()+theme_classic() +
theme(axis.line=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
# map
p2=map+
geom_line(data=pair2, colour="grey", aes(x=x.loc, y=y.loc,
group=idx))+
new_scale_colour() +
geom_point(data=dat1, aes(x=x.loc, y=y.loc,
colour=Count, shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","red"), limits=c(0, 15),
values=c(0, 0.1, 1))+
new_scale_colour()+
geom_point(data=dat2, aes(x=x.loc, y=y.loc, colour=Count,  shape=annotation))+
scale_colour_gradientn(colors=c("gray50", "gray90","blue"), limits=c(0, 7),
values=c(0, 0.1, 1))+
scale_shape_manual("Cell Type", values = c(15, 19))+
theme(plot.title=element_text(hjust = 0.5))+
labs(title="Large Effect Size (0.5)")
p2
ggsave("Figures/fig2c5_2403.pdf", width=3, height=3)
library(patchwork)
p2+p1
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 3), guides = "collect")
ggsave("Figures/fig2c_2403.pdf", width=12, height=4)
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 3), guides = "collect")
ggsave("Figures/fig2c_2403.pdf", width=12, height=5)
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 4), guides = "collect")
ggsave("Figures/fig2c_2403.pdf", width=12, height=4.5)
p2+p1+ p3 + plot_layout(
widths = c(4, 4, 3), guides = "collect")
ggsave("Figures/fig2c_2403.pdf", width=12, height=4.5)
